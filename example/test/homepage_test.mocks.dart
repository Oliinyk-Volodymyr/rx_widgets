// Mocks generated by Mockito 5.3.2 from annotations
// in rx_widget_demo/test/homepage_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'package:mockito/mockito.dart' as _i1;
import 'package:rx_command/rx_command.dart' as _i3;
import 'package:rx_widget_demo/homepage/homepage_model.dart' as _i4;
import 'package:rx_widget_demo/service/weather_entry.dart' as _i5;
import 'package:rx_widget_demo/service/weather_service.dart' as _i2;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeWeatherService_0 extends _i1.SmartFake
    implements _i2.WeatherService {
  _FakeWeatherService_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeRxCommand_1<TParam, TResult> extends _i1.SmartFake
    implements _i3.RxCommand<TParam, TResult> {
  _FakeRxCommand_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [HomePageModel].
///
/// See the documentation for Mockito's code generation for more information.
class MockHomePageModel extends _i1.Mock implements _i4.HomePageModel {
  MockHomePageModel() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.WeatherService get service => (super.noSuchMethod(
        Invocation.getter(#service),
        returnValue: _FakeWeatherService_0(
          this,
          Invocation.getter(#service),
        ),
      ) as _i2.WeatherService);
  @override
  _i3.RxCommand<String, List<_i5.WeatherEntry>> get updateWeatherCommand =>
      (super.noSuchMethod(
        Invocation.getter(#updateWeatherCommand),
        returnValue: _FakeRxCommand_1<String, List<_i5.WeatherEntry>>(
          this,
          Invocation.getter(#updateWeatherCommand),
        ),
      ) as _i3.RxCommand<String, List<_i5.WeatherEntry>>);
  @override
  _i3.RxCommand<bool, bool> get switchChangedCommand => (super.noSuchMethod(
        Invocation.getter(#switchChangedCommand),
        returnValue: _FakeRxCommand_1<bool, bool>(
          this,
          Invocation.getter(#switchChangedCommand),
        ),
      ) as _i3.RxCommand<bool, bool>);
  @override
  _i3.RxCommand<String, String> get textChangedCommand => (super.noSuchMethod(
        Invocation.getter(#textChangedCommand),
        returnValue: _FakeRxCommand_1<String, String>(
          this,
          Invocation.getter(#textChangedCommand),
        ),
      ) as _i3.RxCommand<String, String>);
}
